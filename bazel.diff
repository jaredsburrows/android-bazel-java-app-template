diff --git a/.gitignore b/.gitignore
index 4fa7e0b..271f086 100644
--- a/.gitignore
+++ b/.gitignore
@@ -106,3 +106,6 @@ gradle-app.setting
 
 # Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
 !gradle-wrapper.jar
+
+.aswb/
+bazel-*
diff --git a/BUILD b/BUILD
new file mode 100644
index 0000000..7c67317
--- /dev/null
+++ b/BUILD
@@ -0,0 +1 @@
+exports_files(["versions.bzl"])
diff --git a/README.md b/README.md
index 5ef0d26..3a1e327 100644
--- a/README.md
+++ b/README.md
@@ -1,121 +1,83 @@
-# Android Gradle Java App Template 
+# Android Bazel Java App Template 
 
 [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0)
-[![TravisCI OSX Build](https://img.shields.io/travis/jaredsburrows/android-gradle-java-app-template/master.svg)](https://travis-ci.org/jaredsburrows/android-gradle-java-app-template)
-[![Coveralls Code Coverage](https://img.shields.io/coveralls/jaredsburrows/android-gradle-java-app-template/master.svg?label=Code%20Coverage)](https://coveralls.io/github/jaredsburrows/android-gradle-java-app-template?branch=master)
 [![Twitter Follow](https://img.shields.io/twitter/follow/jaredsburrows.svg?style=social)](https://twitter.com/jaredsburrows)
 
-Gradle + Android Studio + Robolectric + Espresso + Mockito + EasyMock/PowerMock + JaCoCo
-
 ## Technologies used:
 #### Build Tools:
-|Name|Description|
-|---|---|
-| [Gradle](http://gradle.org/docs/current/release-notes) | Gradle build system |
-| [Android Gradle Build Tools](http://tools.android.com/tech-docs/new-build-system) | Official Gradle Plugin |
-| [Android SDK](http://developer.android.com/tools/revisions/platforms.html#5.1) | Official SDK |
+| Name                                                                                     | Description          |
+|------------------------------------------------------------------------------------------|----------------------|
+| [Bazel](https://bazel.build)                                                             | Bazel build system   |
+| [Android SDK](http://developer.android.com/tools/revisions/platforms.html#5.1)           | Official SDK         |
 | [Android SDK Build Tools](http://developer.android.com/tools/revisions/build-tools.html) | Official Build Tools |
-| [Android Studio](http://tools.android.com/recent) or | Official IDE |
-| [Intellij](https://www.jetbrains.com/idea/download/) | Intellij IDE |
-
-#### Android Libraries:
-|Name|Description|
-|---|---|
-| [Android Support-v4](http://developer.android.com/tools/support-library/features.html#v4) | Support Library API 4+ |
-| [Android AppCompat-v7](http://developer.android.com/tools/support-library/features.html#v7-appcompat) | Support Library API 7+ |
+| [Android Studio](http://tools.android.com/recent) or                                     | Official IDE         |
+| [Intellij](https://www.jetbrains.com/idea/download/)                                     | Intellij IDE         |
 
 #### Testing Frameworks:
-|Name|Description|
-|---|---|
+| Name                                                                  | Description               |
+|-----------------------------------------------------------------------|---------------------------|
 | [Espresso](https://google.github.io/android-testing-support-library/) | Instrumentation Framework |
-| [Robolectric](https://github.com/robolectric/robolectric) | Unit Testing Framework |
-
-#### Reporting Plugins:
-|Name|Description|
-|---|---|
-| [JaCoCo](http://www.eclemma.org/jacoco/) | JaCoCo Test Coverage |
-| [Coveralls](https://coveralls.io/) | Hosts test reports published from TravisCI |
-
-#### Continuous Integration:
-|Name|Description|
-|---|---|
-| [TravisCI](http://docs.travis-ci.com/user/languages/android/) | Build Server(Builds, Tests, Publishes reports to Coveralls) |
-
-#### Publishing to Google Play:
-|Name|Description|
-|---|---|
-| [Gradle-play-publisher](https://github.com/Triple-T/gradle-play-publisher) | Publishes your app to Google Play |
+| [Robolectric](https://github.com/robolectric/robolectric)             | Unit Testing Framework    |
 
 # Getting Started:
-## `Android Studio` or `Intellij` Support(Simple):
-- **Import/Open this project with Android Studio/Intellij(click on `build.gradle`)**
-
-- **Instrumentation Tests:**
-  - Change the Build Variant Test Artifact to `Instrumentation Tests`
-  - Right click an instrumentation test located in `src/main/androidTest` and click test
-
-- **Unit Tests:**
-  - Change the Build Variant Test Artifact to `Unit Tests`
-  - Right click a unit test located in `src/main/test` and click test
+## `Android Studio` or `Intellij` Support (Simple):
+- **Import/Open this project with Android Studio/Intellij**
+  1. Install the [Bazel plugin](https://ij.bazel.build/).
+  1. In the project selection dialog, click "Import Bazel Project".
+  1. For the project view, select "Create from scratch".
+  1. Click "Finish".
 
 ## Building and Running
 
-
-This project builds with [Gradle](www.gradle.org) and the Android Build [tools](http://tools.android.com/tech-docs/new-build-system).
+This project builds with [Bazel](https://bazel.build), Bazel's [Android
+rules](https://docs.bazel.build/versions/master/be/android.html), and the
+Android Build [tools](http://tools.android.com/tech-docs/new-build-system).
 
 
 **Build the APK:**
 
-    $ gradlew assembleDebug
+    $ bazel build //src/main:template_app
 
 **Install the APK:**
 
-    $ gradlew installDebug
+    $ bazel mobile-install //src/main:template_app
+    
+or:
+
+    $ bazel build //src/main:template_app && adb install bazel-bin/src/main/template_app.apk
 
 **Run the App:**
 
-    $ gradlew runDebug
+    $ bazel mobile-install //src/main:template_app --start_app
 
 ## Testing
 
-
 **Running the Unit Tests:**
 
+The [Junit](http://junit.org/junit4/) and
+[Robolectric](https://github.com/robolectric/robolectric) tests run on the JVM,
+no need for emulators or real devices.
 
-The [Junit](http://junit.org/junit4/) and [Robolectric](https://github.com/robolectric/robolectric) tests run on the JVM, no need for emulators or real devices.
-
-
-    $ gradlew testDebug
-    
-**Run a single unit test in the `debug flavor`:**
-
-    $ gradlew testDebug --tests="*MainActivityTest*"
-
-    
-**Running the Instrumentation Tests:**
-
-
-The [Espresso](https://developer.android.com/training/testing/ui-testing/espresso-testing.html) instrumentation tests run on the device.
-
-    $ gradlew connectedDebugAndroidTest
-    
-
-## Reports
-
-
-**Generate Lint Reports:**
+    $ bazel test //src/test:all
 
+**Run a single unit test (`android_local_test`):**
 
-The [Lint](http://developer.android.com/tools/help/lint.html) plugin generates reports based off the source code.
+    $ bazel test //src/test:play_services_utils_test_api_28
 
+**Get the list of all `android_local_test` targets :**
 
-    $ gradlew lintDebug
+    $ bazel query 'kind(android_local_test, //src/test/...)'
 
 
-**Generate Jacoco Test Coverage:**
-
+**Running the Instrumentation Tests:**
 
-The [Jacoco](http://www.eclemma.org/jacoco/) plugin generates coverage reports based off the unit tests.
+The
+[Espresso](https://developer.android.com/training/testing/ui-testing/espresso-testing.html)
+instrumentation tests run on the device. There is no need to launch an emulator,
+Bazel will do it automatically as part of the instrumentation test.
 
+This is currently only supported on Linux.
 
-    $ gradlew jacocoDebugReport
+    $ bazel test //src/androidTest:main_activity_test
+    
+Read the [Bazel docs here](https://docs.bazel.build/versions/master/android-instrumentation-test.html).
diff --git a/WORKSPACE b/WORKSPACE
new file mode 100644
index 0000000..1009692
--- /dev/null
+++ b/WORKSPACE
@@ -0,0 +1,59 @@
+android_sdk_repository(
+    name = "androidsdk",
+    path = "/usr/local/google/home/jingwen/sdk",
+)
+
+load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
+
+RULES_MAVEN_COMMIT = "0.0.4"
+
+http_archive(
+    name = "rules_maven",
+    strip_prefix = "rules_maven-%s" % RULES_MAVEN_COMMIT,
+    url = "https://github.com/jin/rules_maven/archive/%s.zip" % RULES_MAVEN_COMMIT,
+)
+
+load("@rules_maven//:defs.bzl", "maven_install")
+load("//bazel/robolectric:android_all.bzl", "ROBOLECTRIC_ANDROID_ALL_JARS")
+load("//:versions.bzl", "versions")
+
+TEST_DEPS = [
+    "org.robolectric:robolectric:" + versions["robolectric"],
+    "org.assertj:assertj-core:" + versions["assertj"],
+    "junit:junit:" + versions["junit"],
+    "androidx.test:runner:" + versions["androidx.test"]["runner"],
+    "androidx.test:rules:" + versions["androidx.test"]["rules"],
+    "androidx.test.ext:junit:" + versions["androidx.test"]["ext"]["junit"],
+    "androidx.test.espresso:espresso-core:" + versions["espresso"],
+    "org.easymock:easymock:" + versions["easymock"],
+    "org.powermock:powermock-core:" + versions["powermock"],
+    "org.powermock:powermock-module-junit4:" + versions["powermock"],
+    "org.powermock:powermock-api-easymock:" + versions["powermock"],
+] + ROBOLECTRIC_ANDROID_ALL_JARS.values()
+
+maven_install(
+    artifacts = [
+        "com.google.android.material:material:" + versions["material"],
+        "androidx.cardview:cardview:" + versions["cardview"],
+        "com.google.android.gms:play-services-ads:" + versions["gps"],
+        "com.google.android.gms:play-services-basement:" + versions["gps"],
+        "com.google.android.gms:play-services-base:" + versions["gps"],
+        "androidx.annotation:annotation:" + versions["annotation"],
+    ] + TEST_DEPS,
+    repositories = [
+        "https://bintray.com/bintray/jcenter",
+        "https://maven.google.com",
+    ],
+)
+
+ATS_COMMIT = "6ec000c66e1daabb9cd0abd29c265550df5c11b1"
+
+http_archive(
+    name = "android_test_support",
+    strip_prefix = "android-test-%s" % ATS_COMMIT,
+    urls = ["https://github.com/jin/android-test/archive/%s.tar.gz" % ATS_COMMIT],
+)
+
+load("@android_test_support//:repo.bzl", "android_test_repositories")
+
+android_test_repositories()
diff --git a/bazel/robolectric/BUILD b/bazel/robolectric/BUILD
new file mode 100644
index 0000000..9aac8ab
--- /dev/null
+++ b/bazel/robolectric/BUILD
@@ -0,0 +1,34 @@
+load("@rules_maven//:defs.bzl", "artifact")
+load("//bazel/robolectric:android_all.bzl", "ROBOLECTRIC_ANDROID_ALL_JARS")
+
+ANDROID_ALL_JARS = [
+    artifact(x)
+    for x in ROBOLECTRIC_ANDROID_ALL_JARS.values()
+]
+
+java_library(
+    name = "robolectric_and_android_all",
+    data = [":robolectric-deps.properties"],
+    exports = [
+        artifact("org.robolectric:robolectric:4.0"),
+    ] + ANDROID_ALL_JARS,
+    visibility = ["//src/test:__subpackages__"],
+)
+
+filegroup(
+    name = "android_all_jars",
+    srcs = ANDROID_ALL_JARS,
+)
+
+genrule(
+    name = "gen_properties",
+    srcs = [":android_all_jars"],
+    outs = ["robolectric-deps.properties"],
+    cmd = "$(location :gen_deps) $(locations :android_all_jars) > $@",
+    tools = [":gen_deps"],
+)
+
+py_binary(
+    name = "gen_deps",
+    srcs = ["gen_deps.py"],
+)
diff --git a/bazel/robolectric/android_all.bzl b/bazel/robolectric/android_all.bzl
new file mode 100644
index 0000000..0113ce1
--- /dev/null
+++ b/bazel/robolectric/android_all.bzl
@@ -0,0 +1,14 @@
+ROBOLECTRIC_ANDROID_ALL_JARS = {
+    28: "org.robolectric:android-all:9-robolectric-4913185-2",
+    27: "org.robolectric:android-all:8.1.0-robolectric-4611349",
+    26: "org.robolectric:android-all:8.0.0_r4-robolectric-r1",
+    25: "org.robolectric:android-all:7.1.0_r7-robolectric-r1",
+    24: "org.robolectric:android-all:7.0.0_r1-robolectric-r1",
+    23: "org.robolectric:android-all:6.0.1_r3-robolectric-r1",
+    22: "org.robolectric:android-all:5.1.1_r9-robolectric-r2",
+    21: "org.robolectric:android-all:5.0.2_r3-robolectric-r0",
+    19: "org.robolectric:android-all:4.4_r1-robolectric-r2",
+    18: "org.robolectric:android-all:4.3_r2-robolectric-r1",
+    17: "org.robolectric:android-all:4.2.2_r1.2-robolectric-r1",
+    16: "org.robolectric:android-all:4.1.2_r1-robolectric-r1",
+}
diff --git a/bazel/robolectric/gen_deps.py b/bazel/robolectric/gen_deps.py
new file mode 100644
index 0000000..80e76b5
--- /dev/null
+++ b/bazel/robolectric/gen_deps.py
@@ -0,0 +1,23 @@
+import sys
+
+
+def getKey(jar):
+  key = "org.robolectric\:android-all\:"
+  version = jar.split("/")[-2:-1].pop()
+  key = key + version
+  return key
+
+
+def getValue(jar):
+  return "../../../" + jar[jar.index("maven"):]
+
+
+def main(argv):
+  for jar in argv[1:]:
+    key = getKey(jar)
+    value = getValue(jar)
+    print("%s=%s" % (key, value))
+
+
+if __name__ == "__main__":
+  main(sys.argv)
diff --git a/build.gradle b/build.gradle
deleted file mode 100644
index b33ab20..0000000
--- a/build.gradle
+++ /dev/null
@@ -1,124 +0,0 @@
-buildscript {
-    apply from: 'gradle/dependencies.gradle'
-
-    repositories {
-        google()
-        gradlePluginPortal()
-    }
-
-    dependencies {
-        classpath 'com.gradle:build-scan-plugin:1.16'
-        classpath 'com.android.tools.build:gradle:3.2.1'
-        classpath 'com.novoda:gradle-android-command-plugin:2.0.1'
-        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.4'
-        classpath 'com.vanniktech:gradle-android-apk-size-plugin:0.4.0'
-        classpath 'com.github.triplet.gradle:play-publisher:1.2.2'
-        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.2'
-        classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.6'
-        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
-    }
-}
-
-repositories {
-    google()
-    gradlePluginPortal()
-}
-
-apply from: 'gradle/scan.gradle'
-apply plugin: 'com.android.application'
-apply plugin: 'android-command'
-apply plugin: 'com.getkeepsafe.dexcount'
-apply plugin: 'com.vanniktech.android.apk.size'
-apply plugin: 'net.ltgt.errorprone'
-apply plugin: 'com.github.ben-manes.versions'
-apply from: 'gradle/compile.gradle'
-apply from: 'gradle/quality.gradle'
-apply from: 'gradle/publish.gradle'
-
-android {
-    compileSdkVersion buildConfig.compileSdk
-
-    defaultConfig {
-        applicationId 'burrows.apps.example.template'
-        versionCode 1
-        versionName '1.0'
-        minSdkVersion buildConfig.minSdk
-        targetSdkVersion buildConfig.targetSdk
-        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
-        resConfigs 'en'
-        vectorDrawables.useSupportLibrary = true
-    }
-
-    signingConfigs {
-        debug {
-            storeFile file('config/debug.keystore')
-            storePassword buildConfig.signing.password
-            keyAlias buildConfig.signing.alias
-            keyPassword buildConfig.signing.password
-        }
-    }
-
-    buildTypes {
-        release {
-            minifyEnabled false
-            proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
-            proguardFile 'proguard-rules.pro'
-            signingConfig signingConfigs.debug
-        }
-    }
-
-    compileOptions {
-        sourceCompatibility versions.java
-        targetCompatibility versions.java
-    }
-
-    dexOptions.preDexLibraries !ci
-
-    lintOptions {
-        textReport true
-        textOutput 'stdout'
-        checkAllWarnings true
-        warningsAsErrors true
-        lintConfig = file('config/lint.xml')
-        checkReleaseBuilds = false
-        checkTestSources = true
-    }
-
-    testOptions {
-        unitTests {
-            includeAndroidResources = true
-            returnDefaultValues = true
-        }
-    }
-}
-
-dependencies {
-    implementation deps.material
-    implementation deps.androidx.cardview
-    implementation deps.gps.ads
-    implementation deps.gps.basement
-    implementation deps.gps.base
-
-    androidTestImplementation deps.androidx.test.runner
-    androidTestImplementation deps.androidx.test.rules
-    androidTestImplementation deps.androidx.test.espresso.core
-    androidTestImplementation deps.androidx.test.espresso.intents
-    androidTestImplementation deps.androidx.test.espresso.contrib
-    androidTestImplementation deps.androidx.test.ext.junit
-
-    testImplementation deps.androidx.test.runner
-    testImplementation deps.androidx.test.rules
-    testImplementation deps.androidx.test.espresso.core
-    testImplementation deps.androidx.test.ext.junit
-    testImplementation deps.junit
-    testImplementation deps.mockito.inline
-    testImplementation deps.easymock
-    testImplementation deps.powermock.core
-    testImplementation deps.powermock.junit4
-    testImplementation deps.powermock.easymock
-    testImplementation deps.robolectric
-    testImplementation deps.assertj
-
-    errorprone deps.errorprone.core
-    errorproneJavac deps.errorprone.javac
-}
diff --git a/gradle.properties b/gradle.properties
deleted file mode 100644
index 97942af..0000000
--- a/gradle.properties
+++ /dev/null
@@ -1,21 +0,0 @@
-# Gradle
-org.gradle.caching=true
-org.gradle.configureondemand=true
-
-# Kotlin Gradle Plugin
-kotlin.incremental.usePreciseJavaTracking=true
-
-# Android Gradle Plugin
-# Use R8 instead of ProGuard for code shrinking.
-android.enableR8=true
-# Enable rudimentary R class namespacing where each library only contains
-# references to the resources it declares instead of declarations plus all
-# transitive dependency references.
-android.namespacedRClass=true
-# Generate R references as class files instead of source files so they don't need compiled.
-android.enableSeparateRClassCompilation=true
-# Android X
-android.useAndroidX=true
-android.enableJetifier=true
-# Robolectric
-android.enableUnitTestBinaryResources=true
diff --git a/gradle/compile.gradle b/gradle/compile.gradle
deleted file mode 100644
index 6922800..0000000
--- a/gradle/compile.gradle
+++ /dev/null
@@ -1,32 +0,0 @@
-tasks.withType(JavaCompile) {
-    sourceCompatibility = versions.java
-    targetCompatibility = versions.java
-
-    configure(options) {
-        compilerArgs << '-Xlint:all'            // Turn on all warnings
-        compilerArgs << '-Xlint:-options'       // Turn off 'missing' bootclasspath warning
-        compilerArgs << '-Xlint:-classfile'     // Espresso
-        compilerArgs << '-Werror'               // Turn warnings into errors
-        encoding = 'utf-8'
-    }
-}
-
-tasks.withType(Test) {
-    testLogging {
-        exceptionFormat 'full'
-        showCauses true
-        showExceptions true
-        showStackTraces true
-        events = ['failed', 'skipped']
-    }
-
-    failFast = true
-    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
-}
-
-tasks.withType(JavaForkOptions) {
-    // Prevent forked processes from stealing focus (on MacOS at least)
-    jvmArgs << '-XX:+UseCompressedOops'
-    jvmArgs << '-Djava.awt.headless=true'
-    jvmArgs << '-Dapple.awt.UIElement=true'
-}
diff --git a/gradle/dependencies.gradle b/gradle/dependencies.gradle
deleted file mode 100644
index 06bf30d..0000000
--- a/gradle/dependencies.gradle
+++ /dev/null
@@ -1,60 +0,0 @@
-ext {
-    ci = hasProperty("ci")
-}
-
-ext.buildConfig = [
-    'compileSdk': 28,
-    'minSdk'    : 19,
-    'targetSdk' : 28,
-    'signing'   : [
-        'alias'   : "androiddebugkey",
-        'password': "android"
-    ]
-]
-
-ext.versions = [
-    'java'     : '1.8',
-    'powermock': '1.7.4',
-    'espresso' : '3.1.0',
-    'gps'      : '11.6.0'
-]
-
-ext.deps = [
-    'androidx'   : [
-        'cardview': 'androidx.cardview:cardview:1.0.0',
-        'test'    : [
-            'runner'  : 'androidx.test:runner:1.1.0',
-            'rules'   : 'androidx.test:rules:1.1.0',
-            'espresso': [
-                'core'   : "androidx.test.espresso:espresso-core:$versions.espresso",
-                'intents': "androidx.test.espresso:espresso-intents:$versions.espresso",
-                'contrib': "androidx.test.espresso:espresso-contrib:$versions.espresso"
-            ],
-            'ext'     : [
-                'junit': 'androidx.test.ext:junit:1.0.0'
-            ]
-        ]
-    ],
-    'material'   : 'com.google.android.material:material:1.0.0',
-    'gps'        : [
-        'ads'     : "com.google.android.gms:play-services-ads:$versions.gps",
-        'basement': "com.google.android.gms:play-services-basement:$versions.gps",
-        'base'    : "com.google.android.gms:play-services-base:$versions.gps",
-    ],
-    'junit'      : 'junit:junit:4.12',
-    'assertj'    : 'org.assertj:assertj-core:1.7.1',
-    'mockito'    : [
-        'inline': 'org.mockito:mockito-inline:2.23.0'
-    ],
-    'errorprone' : [
-        'core' : 'com.google.errorprone:error_prone_core:2.3.2',
-        'javac': 'com.google.errorprone:javac:9+181-r4173-1'
-    ],
-    'robolectric': 'org.robolectric:robolectric:4.0',
-    'easymock'   : 'org.easymock:easymock:3.6',
-    'powermock'  : [
-        'core'    : "org.powermock:powermock-core:$versions.powermock",
-        'junit4'  : "org.powermock:powermock-module-junit4:$versions.powermock",
-        'easymock': "org.powermock:powermock-api-easymock:$versions.powermock"
-    ]
-]
diff --git a/gradle/publish.gradle b/gradle/publish.gradle
deleted file mode 100644
index 20d194a..0000000
--- a/gradle/publish.gradle
+++ /dev/null
@@ -1,7 +0,0 @@
-apply plugin: 'com.github.triplet.play'
-
-play {
-    serviceAccountEmail = 'jaredsburrows@gmail.com'
-    pk12File = file('config/key.p12')
-    track = 'production' // or 'beta' or 'alpha'
-}
diff --git a/gradle/quality.gradle b/gradle/quality.gradle
deleted file mode 100644
index fa302b0..0000000
--- a/gradle/quality.gradle
+++ /dev/null
@@ -1,100 +0,0 @@
-apply plugin: 'pmd'
-apply plugin: 'jacoco'
-apply plugin: 'findbugs'
-apply plugin: 'checkstyle'
-apply plugin: 'com.github.kt3k.coveralls'
-
-// Creates tasks based on the application build variant (productFlavor + buildType = variant)
-android.applicationVariants.all { variant ->
-    def variantName = variant.name.capitalize()
-    def autoGenerated = ['**/R.class',
-                         '**/R$*.class',
-                         '**/Manifest*.*',
-                         'android/**/*.*',
-                         '**/BuildConfig.*',
-                         '**/*$ViewBinder*.*',
-                         '**/*$ViewInjector*.*',
-                         '**/Lambda$*.class',
-                         '**/Lambda.class',
-                         '**/*Lambda.class',
-                         '**/*Lambda*.class']
-
-    // Generates Lint reports based off the source code.
-    variant.assemble.dependsOn "lint$variantName"
-
-    /**
-     * Generates Lint reports based off the source code.
-     */
-    task("pmd$variantName", type: Pmd, dependsOn: "assemble$variantName") {
-        group 'Reporting'
-        description "Generate ${variantName} Pmd reports."
-
-        ignoreFailures = true
-        reports {
-            xml.enabled = true
-            html.enabled = true
-        }
-
-        source = files(variant.javaCompiler.source)
-        classpath = files(configurations.compile.files)
-    }
-
-    /**
-     * Generates Jacoco coverage reports based off the unit tests.
-     */
-    task("jacoco${variantName}Report", type: JacocoReport, dependsOn: "test${variantName}UnitTest") {
-        group 'Reporting'
-        description "Generate ${variantName} Jacoco coverage reports."
-
-        reports {
-            xml.enabled = true
-            html.enabled = true
-        }
-
-        // variant.javaCompile.source does not work
-        // traverses from starting point
-        sourceDirectories = files(android.sourceSets.main.java.srcDirs)
-        executionData = files("${buildDir}/jacoco/test${variantName}UnitTest.exec")
-        classDirectories = fileTree(dir: variant.javaCompiler.destinationDir, excludes: autoGenerated)
-    }
-
-    /**
-     * Generates FindBugs reports based off the source code.
-     */
-    task("findbugs$variantName", type: FindBugs, dependsOn: "assemble$variantName") {
-        group 'Reporting'
-        description "Generate ${variantName} Findbugs reports."
-
-        ignoreFailures = true
-        reports {
-            xml.enabled = false
-            html.enabled = true
-        }
-
-        effort = 'max'
-        reportLevel = 'low'
-        source = files(variant.javaCompiler.source)
-        classpath = files(configurations.compile.files)
-        classes = fileTree(dir: variant.javaCompiler.destinationDir, excludes: autoGenerated)
-    }
-
-    /**
-     * Generates Checkstyle reports based off the source code.
-     */
-    task("checkstyle$variantName", type: Checkstyle, dependsOn: "assemble$variantName") {
-        group 'Reporting'
-        description "Generate ${variantName} Checkstyle reports."
-
-        ignoreFailures = true
-        reports.html.enabled = true
-
-        configFile = file('config/checkstyle-hard.xml')
-        source = files(android.sourceSets.main.java.srcDirs)
-        classpath = files(configurations.compile.files)
-    }
-}
-
-// Only allows specifying of a single file
-coveralls {
-    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoDebugReport/jacocoDebugReport.xml"
-}
diff --git a/gradle/scan.gradle b/gradle/scan.gradle
deleted file mode 100644
index 9d68e90..0000000
--- a/gradle/scan.gradle
+++ /dev/null
@@ -1,6 +0,0 @@
-apply plugin: 'com.gradle.build-scan'
-
-buildScan {
-  licenseAgreementUrl = 'https://gradle.com/terms-of-service'
-  licenseAgree = 'yes'
-}
diff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar
deleted file mode 100644
index 29953ea141f55e3b8fc691d31b5ca8816d89fa87..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 56177
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

diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
deleted file mode 100644
index e0b3fb8..0000000
--- a/gradle/wrapper/gradle-wrapper.properties
+++ /dev/null
@@ -1,5 +0,0 @@
-distributionBase=GRADLE_USER_HOME
-distributionPath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-4.10.2-bin.zip
-zipStoreBase=GRADLE_USER_HOME
-zipStorePath=wrapper/dists
diff --git a/gradlew b/gradlew
deleted file mode 100755
index cccdd3d..0000000
--- a/gradlew
+++ /dev/null
@@ -1,172 +0,0 @@
-#!/usr/bin/env sh
-
-##############################################################################
-##
-##  Gradle start up script for UN*X
-##
-##############################################################################
-
-# Attempt to set APP_HOME
-# Resolve links: $0 may be a link
-PRG="$0"
-# Need this for relative symlinks.
-while [ -h "$PRG" ] ; do
-    ls=`ls -ld "$PRG"`
-    link=`expr "$ls" : '.*-> \(.*\)$'`
-    if expr "$link" : '/.*' > /dev/null; then
-        PRG="$link"
-    else
-        PRG=`dirname "$PRG"`"/$link"
-    fi
-done
-SAVED="`pwd`"
-cd "`dirname \"$PRG\"`/" >/dev/null
-APP_HOME="`pwd -P`"
-cd "$SAVED" >/dev/null
-
-APP_NAME="Gradle"
-APP_BASE_NAME=`basename "$0"`
-
-# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-DEFAULT_JVM_OPTS=""
-
-# Use the maximum available, or set MAX_FD != -1 to use that value.
-MAX_FD="maximum"
-
-warn () {
-    echo "$*"
-}
-
-die () {
-    echo
-    echo "$*"
-    echo
-    exit 1
-}
-
-# OS specific support (must be 'true' or 'false').
-cygwin=false
-msys=false
-darwin=false
-nonstop=false
-case "`uname`" in
-  CYGWIN* )
-    cygwin=true
-    ;;
-  Darwin* )
-    darwin=true
-    ;;
-  MINGW* )
-    msys=true
-    ;;
-  NONSTOP* )
-    nonstop=true
-    ;;
-esac
-
-CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
-
-# Determine the Java command to use to start the JVM.
-if [ -n "$JAVA_HOME" ] ; then
-    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
-        # IBM's JDK on AIX uses strange locations for the executables
-        JAVACMD="$JAVA_HOME/jre/sh/java"
-    else
-        JAVACMD="$JAVA_HOME/bin/java"
-    fi
-    if [ ! -x "$JAVACMD" ] ; then
-        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-    fi
-else
-    JAVACMD="java"
-    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-
-Please set the JAVA_HOME variable in your environment to match the
-location of your Java installation."
-fi
-
-# Increase the maximum file descriptors if we can.
-if [ "$cygwin" = "false" -a "$darwin" = "false" -a "$nonstop" = "false" ] ; then
-    MAX_FD_LIMIT=`ulimit -H -n`
-    if [ $? -eq 0 ] ; then
-        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
-            MAX_FD="$MAX_FD_LIMIT"
-        fi
-        ulimit -n $MAX_FD
-        if [ $? -ne 0 ] ; then
-            warn "Could not set maximum file descriptor limit: $MAX_FD"
-        fi
-    else
-        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
-    fi
-fi
-
-# For Darwin, add options to specify how the application appears in the dock
-if $darwin; then
-    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
-fi
-
-# For Cygwin, switch paths to Windows format before running java
-if $cygwin ; then
-    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
-    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
-    JAVACMD=`cygpath --unix "$JAVACMD"`
-
-    # We build the pattern for arguments to be converted via cygpath
-    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
-    SEP=""
-    for dir in $ROOTDIRSRAW ; do
-        ROOTDIRS="$ROOTDIRS$SEP$dir"
-        SEP="|"
-    done
-    OURCYGPATTERN="(^($ROOTDIRS))"
-    # Add a user-defined pattern to the cygpath arguments
-    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
-        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
-    fi
-    # Now convert the arguments - kludge to limit ourselves to /bin/sh
-    i=0
-    for arg in "$@" ; do
-        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
-        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
-
-        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
-            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
-        else
-            eval `echo args$i`="\"$arg\""
-        fi
-        i=$((i+1))
-    done
-    case $i in
-        (0) set -- ;;
-        (1) set -- "$args0" ;;
-        (2) set -- "$args0" "$args1" ;;
-        (3) set -- "$args0" "$args1" "$args2" ;;
-        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
-        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
-        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
-        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
-        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
-        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
-    esac
-fi
-
-# Escape application args
-save () {
-    for i do printf %s\\n "$i" | sed "s/'/'\\\\''/g;1s/^/'/;\$s/\$/' \\\\/" ; done
-    echo " "
-}
-APP_ARGS=$(save "$@")
-
-# Collect all arguments for the java command, following the shell quoting and substitution rules
-eval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS "\"-Dorg.gradle.appname=$APP_BASE_NAME\"" -classpath "\"$CLASSPATH\"" org.gradle.wrapper.GradleWrapperMain "$APP_ARGS"
-
-# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong
-if [ "$(uname)" = "Darwin" ] && [ "$HOME" = "$PWD" ]; then
-  cd "$(dirname "$0")"
-fi
-
-exec "$JAVACMD" "$@"
diff --git a/gradlew.bat b/gradlew.bat
deleted file mode 100644
index e95643d..0000000
--- a/gradlew.bat
+++ /dev/null
@@ -1,84 +0,0 @@
-@if "%DEBUG%" == "" @echo off
-@rem ##########################################################################
-@rem
-@rem  Gradle startup script for Windows
-@rem
-@rem ##########################################################################
-
-@rem Set local scope for the variables with windows NT shell
-if "%OS%"=="Windows_NT" setlocal
-
-set DIRNAME=%~dp0
-if "%DIRNAME%" == "" set DIRNAME=.
-set APP_BASE_NAME=%~n0
-set APP_HOME=%DIRNAME%
-
-@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
-set DEFAULT_JVM_OPTS=
-
-@rem Find java.exe
-if defined JAVA_HOME goto findJavaFromJavaHome
-
-set JAVA_EXE=java.exe
-%JAVA_EXE% -version >NUL 2>&1
-if "%ERRORLEVEL%" == "0" goto init
-
-echo.
-echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:findJavaFromJavaHome
-set JAVA_HOME=%JAVA_HOME:"=%
-set JAVA_EXE=%JAVA_HOME%/bin/java.exe
-
-if exist "%JAVA_EXE%" goto init
-
-echo.
-echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
-echo.
-echo Please set the JAVA_HOME variable in your environment to match the
-echo location of your Java installation.
-
-goto fail
-
-:init
-@rem Get command-line arguments, handling Windows variants
-
-if not "%OS%" == "Windows_NT" goto win9xME_args
-
-:win9xME_args
-@rem Slurp the command line arguments.
-set CMD_LINE_ARGS=
-set _SKIP=2
-
-:win9xME_args_slurp
-if "x%~1" == "x" goto execute
-
-set CMD_LINE_ARGS=%*
-
-:execute
-@rem Setup the command line
-
-set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
-
-@rem Execute Gradle
-"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
-
-:end
-@rem End local scope for the variables with windows NT shell
-if "%ERRORLEVEL%"=="0" goto mainEnd
-
-:fail
-rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
-rem the _cmd.exe /c_ return code!
-if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
-exit /b 1
-
-:mainEnd
-if "%OS%"=="Windows_NT" endlocal
-
-:omega
diff --git a/settings.gradle b/settings.gradle
deleted file mode 100644
index 309a2c5..0000000
--- a/settings.gradle
+++ /dev/null
@@ -1 +0,0 @@
-rootProject.name = 'android-gradle-java-app-template'
diff --git a/src/androidTest/AndroidManifest.xml b/src/androidTest/AndroidManifest.xml
new file mode 100644
index 0000000..66f14fb
--- /dev/null
+++ b/src/androidTest/AndroidManifest.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+          package="burrows.apps.example.template.instrumentation">
+
+    <uses-sdk android:minSdkVersion="19" android:targetSdkVersion="27" />
+
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
+
+    <instrumentation
+        android:name="androidx.test.runner.AndroidJUnitRunner"
+        android:targetPackage="burrows.apps.example.template" />
+
+</manifest>
diff --git a/src/androidTest/BUILD b/src/androidTest/BUILD
new file mode 100644
index 0000000..da96be9
--- /dev/null
+++ b/src/androidTest/BUILD
@@ -0,0 +1,26 @@
+load("@rules_maven//:defs.bzl", "artifact")
+load("//:versions.bzl", "versions")
+
+android_instrumentation_test(
+    name = "main_activity_test",
+    tags = ["manual"],  # Linux only, so this excludes it from //...
+    target_device = "@android_test_support//tools/android/emulated_devices/generic_phone:android_23_x86_qemu2",
+    test_app = ":template_test_app",
+)
+
+android_binary(
+    name = "template_test_app",
+    srcs = ["java/burrows/apps/example/template/instrumentation/MainActivityTest.java"],
+    custom_package = "burrows.apps.example.template.instrumentation",
+    instruments = "//src/main:template_app",
+    manifest = "AndroidManifest.xml",
+    deps = [
+        artifact("androidx.test:runner:" + versions["androidx.test"]["runner"]),
+        artifact("androidx.test:rules:" + versions["androidx.test"]["runner"]),
+        artifact("androidx.annotation:annotation:" + versions["annotation"]),
+        artifact("androidx.test.espresso:espresso-core:" + versions["espresso"]),
+        artifact("androidx.test.ext:junit:" + versions["androidx.test"]["ext"]["junit"]),
+        artifact("junit:junit:" + versions["junit"]),
+        "//src/main:template_app_lib",
+    ],
+)
diff --git a/src/androidTest/java/burrows/apps/example/template/instrumentation/MainActivityTest.java b/src/androidTest/java/burrows/apps/example/template/instrumentation/MainActivityTest.java
index d3afd4f..61566f2 100644
--- a/src/androidTest/java/burrows/apps/example/template/instrumentation/MainActivityTest.java
+++ b/src/androidTest/java/burrows/apps/example/template/instrumentation/MainActivityTest.java
@@ -1,16 +1,19 @@
 package burrows.apps.example.template.instrumentation;
 
 import androidx.annotation.NonNull;
+import androidx.test.ext.junit.runners.AndroidJUnit4;
 import androidx.test.rule.ActivityTestRule;
 import burrows.apps.example.template.activity.MainActivity;
 import org.junit.Rule;
 import org.junit.Test;
+import org.junit.runner.RunWith;
 
 import static androidx.test.espresso.Espresso.onView;
 import static androidx.test.espresso.assertion.ViewAssertions.matches;
 import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;
 import static androidx.test.espresso.matcher.ViewMatchers.withText;
 
+@RunWith(AndroidJUnit4.class)
 public class MainActivityTest {
     @NonNull
     @Rule
@@ -18,6 +21,6 @@ public class MainActivityTest {
 
     @Test
     public void shouldDisplayMainScreenWithCorrectTitle() {
-        onView(withText("AndroidGradleTemplate")).check(matches(isDisplayed()));
+        onView(withText("Android Bazel Template")).check(matches(isDisplayed()));
     }
 }
diff --git a/src/main/AndroidManifest.xml b/src/main/AndroidManifest.xml
index ea1f51c..bb70850 100644
--- a/src/main/AndroidManifest.xml
+++ b/src/main/AndroidManifest.xml
@@ -1,52 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
-          xmlns:tools="http://schemas.android.com/tools"
-          package="burrows.apps.example.template"
-          android:installLocation="auto"
-          tools:ignore="UnusedAttribute">
+          package="burrows.apps.example.template">
 
-    <!-- Google Admob -->
-    <uses-permission android:name="android.permission.INTERNET"/>
-    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
-
-    <supports-screens
-        android:anyDensity="true"
-        android:largeScreens="true"
-        android:normalScreens="true"
-        android:smallScreens="true"
-        android:xlargeScreens="true"/>
-
-    <application
-        android:label="@string/app_name"
-        android:icon="@mipmap/ic_launcher"
-        android:theme="@style/AppTheme"
-        android:hardwareAccelerated="true"
-        android:fullBackupContent="true"
-        android:allowBackup="true"
-        android:supportsRtl="true"
-        tools:ignore="GoogleAppIndexingWarning">
-        <activity
-            android:name=".activity.MainActivity"
-            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
-            android:windowSoftInputMode="adjustPan">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN"/>
-
-                <category android:name="android.intent.category.LAUNCHER"/>
-            </intent-filter>
-        </activity>
-
-        <activity
-            android:name="com.google.android.gms.ads.AdActivity"
-            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
-            android:theme="@android:style/Theme.Translucent"/>
-
-        <meta-data
-            android:name="com.google.android.gms.version"
-            android:value="@integer/google_play_services_version"/>
-
-        <meta-data
-            android:name="com.google.android.gms.ads.APPLICATION_ID"
-            android:value="@string/app_ads_id"/>
-    </application>
+    <uses-sdk android:minSdkVersion="19" android:targetSdkVersion="27" />
 </manifest>
diff --git a/src/main/BUILD b/src/main/BUILD
new file mode 100644
index 0000000..712be4c
--- /dev/null
+++ b/src/main/BUILD
@@ -0,0 +1,35 @@
+load("@rules_maven//:defs.bzl", "artifact")
+
+android_binary(
+    name = "template_app",
+    custom_package = "burrows.apps.example.template",
+    manifest = "AndroidManifest.xml",
+    visibility = ["//src/androidTest:__subpackages__"],
+    deps = ["//src/main:template_app_lib"],
+)
+
+android_library(
+    name = "template_app_lib",
+    srcs = glob(["java/**/*.java"]),
+    custom_package = "burrows.apps.example.template",
+    manifest = "java/AndroidManifest.xml",
+    resource_files = glob(["res/**/*"]),
+    visibility = ["//src:__subpackages__"],
+    deps = [":external_deps"],
+)
+
+android_library(
+    name = "external_deps",
+    exports = [
+        artifact("com.google.android.material:material:1.0.0"),
+        artifact("com.google.android.gms:play-services-ads:15.0.0"),
+        artifact("com.google.android.gms:play-services-basement:15.0.0"),
+        artifact("com.google.android.gms:play-services-base:15.0.0"),
+        artifact("androidx.annotation:annotation:1.0.0"),
+        artifact("androidx.cardview:cardview:1.0.0"),
+        artifact("androidx.appcompat:appcompat:1.0.0"),
+        artifact("com.google.android.gms:play-services-ads-lite:15.0.0"),
+        artifact("androidx.recyclerview:recyclerview:1.0.0"),
+        artifact("androidx.fragment:fragment:1.0.0"),
+    ],
+)
diff --git a/src/main/java/AndroidManifest.xml b/src/main/java/AndroidManifest.xml
new file mode 100644
index 0000000..a0a1343
--- /dev/null
+++ b/src/main/java/AndroidManifest.xml
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+          xmlns:tools="http://schemas.android.com/tools"
+          package="burrows.apps.example.template"
+          android:installLocation="auto"
+          tools:ignore="UnusedAttribute">
+
+    <!-- Google Admob -->
+    <uses-permission android:name="android.permission.INTERNET"/>
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>
+
+    <uses-sdk android:minSdkVersion="19" android:targetSdkVersion="27" />
+
+    <supports-screens
+        android:anyDensity="true"
+        android:largeScreens="true"
+        android:normalScreens="true"
+        android:smallScreens="true"
+        android:xlargeScreens="true"/>
+
+    <application
+        android:label="@string/app_name"
+        android:icon="@mipmap/ic_launcher"
+        android:theme="@style/AppTheme"
+        android:hardwareAccelerated="true"
+        android:fullBackupContent="true"
+        android:allowBackup="true"
+        android:supportsRtl="true"
+        tools:ignore="GoogleAppIndexingWarning">
+        <activity
+            android:name=".activity.MainActivity"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
+            android:windowSoftInputMode="adjustPan">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN"/>
+
+                <category android:name="android.intent.category.LAUNCHER"/>
+            </intent-filter>
+        </activity>
+
+        <activity
+            android:name="com.google.android.gms.ads.AdActivity"
+            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
+            android:theme="@android:style/Theme.Translucent"/>
+
+        <meta-data
+            android:name="com.google.android.gms.version"
+            android:value="@integer/google_play_services_version"/>
+
+        <meta-data
+            android:name="com.google.android.gms.ads.APPLICATION_ID"
+            android:value="@string/app_ads_id"/>
+    </application>
+</manifest>
diff --git a/src/main/res/values/strings.xml b/src/main/res/values/strings.xml
index 19d28bd..8a57ee4 100644
--- a/src/main/res/values/strings.xml
+++ b/src/main/res/values/strings.xml
@@ -1,7 +1,7 @@
 <?xml version="1.0" encoding="utf-8"?>
 <resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="TypographyDashes">
 
-    <string name="app_name">Android Gradle Template</string>
+    <string name="app_name">Android Bazel Template</string>
     <string name="app_ads_id">ca-app-pub-3940256099942544~3347511713</string>
     <string name="app_ad_banner" translatable="false">ca-app-pub-3940256099942544/6300978111</string>
     <string name="app_ad_interstitial" translatable="false">ca-app-pub-3940256099942544/1033173712</string>
diff --git a/src/test/AndroidManifest.xml b/src/test/AndroidManifest.xml
new file mode 100644
index 0000000..2541822
--- /dev/null
+++ b/src/test/AndroidManifest.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+          package="burrows.apps.example.template.activity">
+
+    <uses-sdk android:minSdkVersion="19" android:targetSdkVersion="${targetSdkVersion}" />
+</manifest>
diff --git a/src/test/BUILD b/src/test/BUILD
new file mode 100644
index 0000000..cdee3ed
--- /dev/null
+++ b/src/test/BUILD
@@ -0,0 +1,70 @@
+load("@rules_maven//:defs.bzl", "artifact")
+load("//:versions.bzl", "versions")
+
+TARGET_SDK_VERSIONS = [
+    19,
+    21,
+    22,
+    23,
+    24,
+    25,
+    26,
+    27,
+    28,
+]
+
+[android_local_test(
+    name = "main_activity_test_api_%s" % targetSdkVersion,
+    srcs = ["java/burrows/apps/example/template/activity/MainActivityTest.java"],
+    manifest = "AndroidManifest.xml",
+    manifest_values = {
+        "targetSdkVersion": str(targetSdkVersion),
+    },
+    test_class = "burrows.apps.example.template.activity.MainActivityTest",
+    deps = [
+        "//bazel/robolectric:robolectric_and_android_all",
+        "//src/main:template_app_lib",
+        artifact("androidx.test.ext:junit:" + versions["androidx.test"]["ext"]["junit"]),
+        artifact("org.assertj:assertj-core:" + versions["assertj"]),
+        artifact("org.robolectric.shadows:framework:" + versions["robolectric"]),
+    ],
+) for targetSdkVersion in TARGET_SDK_VERSIONS]
+
+[android_local_test(
+    name = "ads_util_test_api_%s" % targetSdkVersion,
+    srcs = ["java/burrows/apps/example/template/util/AdUtilsTest.java"],
+    manifest = "AndroidManifest.xml",
+    manifest_values = {
+        "targetSdkVersion": str(targetSdkVersion),
+    },
+    test_class = "burrows.apps.example.template.util.AdUtilsTest",
+    deps = [
+        "//bazel/robolectric:robolectric_and_android_all",
+        "//src/main:template_app_lib",
+        artifact("org.hamcrest:hamcrest-library:1.3"),
+        artifact("com.google.android.gms:play-services-ads-lite:" + versions["gps"]),
+    ],
+) for targetSdkVersion in TARGET_SDK_VERSIONS]
+
+[android_local_test(
+    name = "play_services_utils_test_api_%s" % targetSdkVersion,
+    srcs = ["java/burrows/apps/example/template/util/PlayServicesUtilsTest.java"],
+    manifest = "AndroidManifest.xml",
+    manifest_values = {
+        "targetSdkVersion": str(targetSdkVersion),
+    },
+    test_class = "burrows.apps.example.template.util.PlayServicesUtilsTest",
+    deps = [
+        "//bazel/robolectric:robolectric_and_android_all",
+        "//src/main:template_app_lib",
+        artifact("androidx.annotation:annotation:" + versions["annotation"]),
+        artifact("org.hamcrest:hamcrest-library:1.3"),
+        artifact("org.easymock:easymock:" + versions["easymock"]),
+        artifact("com.google.android.gms:play-services-basement:" + versions["gps"]),
+        artifact("com.google.android.gms:play-services-base:" + versions["gps"]),
+        artifact("org.powermock:powermock-api-easymock:" + versions["powermock"]),
+        artifact("org.powermock:powermock-api-support:" + versions["powermock"]),
+        artifact("org.powermock:powermock-core:" + versions["powermock"]),
+        artifact("org.powermock:powermock-module-junit4:" + versions["powermock"]),
+    ],
+) for targetSdkVersion in TARGET_SDK_VERSIONS]
diff --git a/src/test/java/burrows/apps/example/template/activity/MainActivityTest.java b/src/test/java/burrows/apps/example/template/activity/MainActivityTest.java
index 178516e..591866e 100644
--- a/src/test/java/burrows/apps/example/template/activity/MainActivityTest.java
+++ b/src/test/java/burrows/apps/example/template/activity/MainActivityTest.java
@@ -1,10 +1,10 @@
 package burrows.apps.example.template.activity;
 
 import android.app.Activity;
-import androidx.test.ext.junit.runners.AndroidJUnit4;
 import org.junit.Test;
 import org.junit.runner.RunWith;
 import org.robolectric.Robolectric;
+import org.robolectric.RobolectricTestRunner;
 import org.robolectric.android.controller.ActivityController;
 
 import static org.assertj.core.api.Assertions.assertThat;
@@ -12,8 +12,9 @@ import static org.assertj.core.api.Assertions.assertThat;
 /**
  * Junit Test using Robolectric with AssertJ matchers.
  */
-@RunWith(AndroidJUnit4.class)
+@RunWith(RobolectricTestRunner.class)
 public class MainActivityTest {
+
     @Test
     public void testOnCreateNotNull() {
         ActivityController<MainActivity> controller = Robolectric.buildActivity(MainActivity.class);
@@ -21,4 +22,5 @@ public class MainActivityTest {
 
         assertThat(activity).isNotNull();
     }
+
 }
diff --git a/versions.bzl b/versions.bzl
new file mode 100644
index 0000000..7396b6a
--- /dev/null
+++ b/versions.bzl
@@ -0,0 +1,20 @@
+versions = {
+    "material": "1.0.0",
+    "cardview": "1.0.0",
+    "annotation": "1.0.0",
+    "powermock": "1.7.4",
+    "espresso": "3.1.0",
+    "gps": "15.0.0",
+    "easymock": "3.6",
+    "junit": "4.12",
+    "assertj": "1.7.1",
+    "robolectric": "4.0",
+    # Nested dictionaries
+    "androidx.test": {
+        "runner": "1.1.0",
+        "rules": "1.1.0",
+        "ext": {
+            "junit": "1.0.0",
+        },
+    },
+}
